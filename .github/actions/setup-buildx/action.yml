name: "Setup Buildx"
description: "Sets up buildx using my oracle VPS as a builder for arm images"

# to build the arm image, qemu is too slow (about 3hrs to build)
# so we use my personal Oracle VPS as a buildx builder via ssh

inputs:
  ssh_private_key:
    required: true
  ssh_user:
    required: true
  ssh_ip:
    required: true

runs:
  using: composite
  steps:
    - name: ðŸ’» Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >>~/.ssh/config <<END
          Host arm-vm
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ inputs.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ inputs.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ inputs.SSH_IP }}

      # Creating our own builder lets us have more control over the build process
      # we are making the actions runner natively build the amd image, but SSH into our arm VM for the arm image
      # https://www.docker.com/blog/speed-up-building-with-docker-buildx-and-graviton2-ec2/
      # this allows u to still use build-push-action, but docker will automatically choose which builder to use based on the platform
      - name: Setup Buildx Instances
        run: |
          docker buildx create --use --name main-builder --platform=linux/amd64 --driver=docker-container
          docker buildx create --append --name=main-builder --platform=linux/arm64 ssh://arm-vm
          docker buildx inspect main-builder --bootstrap
          docker buildx ls