name: Deploy Docker Images

on:
  workflow_dispatch:
    inputs:
      version:
        description: Idris Version
        required: true
        default: "v0.5.1"
  push:
    main:
      paths:
        - ".github/workflows/deploy.yml" # this file
        - "devcontainer.Dockerfile"

permissions:
  packages: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64,arm"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup Docker Layer Caching
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: create-meta
        uses: docker/metadata-action@v4
        with:
          images: joshuanianji/idris2

      # If we are not doing a workflow dispatch/call, we have to manually set the idris version
      - name: Set Environment (Non workflow dispatch/call)
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: echo "GITHUB_IDRIS_VERSION=v0.5.1" >> $GITHUB_ENV

      - name: Set Environment (Workflow call/dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "GITHUB_IDRIS_VERSION=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Test Environment
        run: echo $GITHUB_IDRIS_VERSION

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          # push: ${{ github.event_name != 'pull_request' }}
          file: devcontainer.Dockerfile
          build-args: |
            IDRIS_VERSION=${{ env.GITHUB_IDRIS_VERSION }}
          push: false
          tags: ${{ steps.create-meta.outputs.tags }}
          labels: ${{ steps.create-meta.outputs.labels }}
